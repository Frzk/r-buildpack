#!/usr/bin/env bash

set -eo pipefail

if [ -n "${BUILDPACK_DEBUG}" ]
then
    set -x
fi

readonly BUILD_DIR="${1}"
readonly CACHE_DIR="${2}"
readonly ENV_DIR="${3}"

readonly BASE_DIR="$( cd -P "$( dirname "$0" )" && pwd )"
readonly BUILDPACK_DIR="$( readlink -f "${BASE_DIR}/.." )"

readonly R_VERSION="${R_VERSION:-4.0.0}"
readonly url="https://cran.r-project.org/src/base/R-${R_VERSION:0:1}/R-${R_VERSION}.tar.gz"



# ----
# Install gfortran to compile R

# Use Apt buildpack to install gfortran

cat <<EOF >>"${BUILD_DIR}/Aptfile"
gfortran
EOF

apt_deps_buildpack_dir="$( mktemp apt_buildpack_XXXX )"
# We only need a random name, so we can safely delete the file:
rm "${apt_deps_buildpack_dir}"

readonly apt_buildpack_url="https://github.com/Scalingo/apt-buildpack.git"
git clone --depth=1 "${apt_buildpack_url}" "${apt_deps_buildpack_dir}"

"${apt_deps_buildpack_dir}/bin/compile" \
    "${BUILD_DIR}" "${CACHE_DIR}" "${ENV_DIR}"


# Check if the apt-buildpack left behind an environment for
# subsequent ones:
#
# FIXME: export file should be in ${BUILD_DIR}, not in the temp apt dir
# but this is where the apt-buildpack puts it :(
#
# rm -r "$apt_deps_buildpack_dir"

if [ -e "${BUILD_DIR}/${apt_deps_buildpack_dir}/export" ]; then
    source "${BUILD_DIR}/${apt_deps_buildpack_dir}/export"
fi

printenv LD_LIBRARY_PATH


R_HOME="${BUILD_DIR}/R-4.0.0/lib"
export R_HOME

PATH="\$HOME/.apt/bin/x86_64-linux-gnu-gfortran:${PATH}"
export PATH

printenv

# ----
# Download and compile R

curl --location "${url}" --output "${CACHE_DIR}/R-4.0.0.tar.gz"

tar --extract --gzip --verbose --file="${CACHE_DIR}/R-4.0.0.tar.gz" \
    --directory "${CACHE_DIR}"

pushd "${CACHE_DIR}/R-4.0.0"

# R documentation states that Debian-based systems may need to add
# LIBnn=lib but it doesn't seem to bring better results.
./configure LIBnn=lib \
    --prefix="${BUILD_DIR}/R-4.0.0" \
    --libdir="${BUILD_DIR}/R-4.0.0/lib" \
    --enable-java=no \
    --with-recommended-packages=no

make
make install

popd

ln --symbolic --no-dereference --force "${BUILD_DIR}/R-4.0.0" "${BUILD_DIR}/R"

PATH="${BUILD_DIR}/R/bin:${PATH}"
export PATH

echo "Done."
